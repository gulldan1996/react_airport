{"version":3,"sources":["Components/Flight.jsx","Components/FlightList.jsx","App.js","serviceWorker.js","index.js"],"names":["Flight","localDate","Date","this","props","items","actual","localeTime","getHours","getMinutes","departureDate","timeArrShedule","timeDepShedule","departureTime","react_default","a","createElement","Fragment","key","ID","className","term","displayGate","gateNo","airline","en","name","status","fltNo","href","Component","FlightList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","departures","arrivals","display","changedDeparture","bind","assertThisInitialized","changedArrivals","url","fetch","then","response","json","_this2","dateObj","month","getUTCMonth","newDate","getUTCDate","getUTCFullYear","Promise","all","loadApi","concat","_ref","flights","slicedToArray","setState","body","departure","arrival","_this3","onClick","width","height","viewBox","version","xmlns","id","transform","fill","d","map","item","Flight_Flight","App","FlightList_FlightList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cfb28463.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Flight.css'\r\n\r\nexport default class Flight extends Component {\r\n  render() {\r\n  const localDate = new Date(this.props.items.actual);\r\n  const localeTime = localDate.getHours() + ':' + localDate.getMinutes();\r\n  const departureDate = new Date(this.props.items.timeArrShedule || this.props.items.timeDepShedule);\r\n  const departureTime = departureDate.getHours() + ':' + departureDate.getMinutes();\r\n    return (\r\n      <>\r\n        <tr key={this.props.items.ID} className=\"flight\">\r\n          <td className=\"flight--term\">\r\n            <span className={this.props.items.term === 'A' ? 'flight-term--a' : 'flight-term--d'}>\r\n              {this.props.items.term}\r\n            </span>\r\n          </td>\r\n          {this.props.displayGate ? <td>{this.props.items.gateNo}</td> : null}\r\n          <td>{localeTime}</td>\r\n          <td>{this.props.items['airportToID.city_en'] ||\r\n            this.props.items['airportFromID.city_en']}\r\n          </td>\r\n          <td>Departed at: {departureTime}</td>\r\n          <td>{this.props.items.airline.en.name}</td>\r\n          <td>{this.props.items.status + this.props.items.fltNo}</td>\r\n          <td className=\"flight-details\"><a href=\"\">Flight details</a></td>\r\n        </tr>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Flight from './Flight.jsx';\r\nimport './FlightList.css';\r\n\r\nexport default class FlightList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      departures: [],\r\n      arrivals: [],\r\n      display: 'departures'\r\n    }\r\n    this.changedDeparture = this.changedDeparture.bind(this);\r\n    this.changedArrivals = this.changedArrivals.bind(this);\r\n  }\r\n\r\n  loadApi(url) {\r\n    return fetch(url)\r\n    .then(response => response.json()).then(response => response)\r\n  }\r\n\r\n  componentDidMount() {\r\n    let dateObj = new Date();\r\n    let month = dateObj.getUTCMonth() + 1;\r\n    let day = dateObj.getUTCDate();\r\n    let year = dateObj.getUTCFullYear();\r\n\r\n    let newDate = day + \"-\" + month + \"-\" + year;\r\n    Promise.all([\r\n      this.loadApi(`https://api.iev.aero/api/flights/${newDate}`)\r\n    ])\r\n    .then(([flights]) => this.setState({\r\n      departures: flights.body.departure,\r\n      arrivals: flights.body.arrival\r\n    }))\r\n  }\r\n\r\n  changedDeparture() {\r\n    this.setState({\r\n      display: 'departures'\r\n    })\r\n  }\r\n\r\n  changedArrivals() {\r\n    this.setState({\r\n      display: 'arrivals'\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"air-wrapper\">\r\n        <div className=\"air-table__btn\">\r\n            <button className={this.state.display === 'departures' ? ' air-btn--focus btn-left' : 'air-btn--focus-no'}\r\n            onClick={this.changedDeparture}>\r\n            <span>\r\n              <svg className=\"air-svg\" width=\"40px\" height=\"28px\" viewBox=\"0 0 40 28\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <g className=\"air-svg--fill\" id=\"Path-403\" transform=\"translate(-1.000000, -1.000000)\" fill=\"#fff\">\r\n                      <path d=\"M40.9190312,14.2925525 C40.731055,13.5210761 40.2396434,12.8581323 39.5561585,12.4539552\r\n                        C38.8726735,12.0497781 38.0549837,11.9385881 37.2883912,12.1455827 L26.8096581,15.0218819 L13.1945082,2\r\n                        L9.38678826,3.03046545 L17.5564785,17.5510243 L7.75204986,20.2442408 L3.86129243,17.1278331 L1,17.9171897\r\n                        L4.59162231,24.3200818 L6.11030829,27.0112974 L9.26373268,26.1409043 L19.7414654,23.2656055\r\n                         L28.3253427,20.9165445 L38.8070772,18.0372439 C40.4055057,17.5625364 41.3397513,15.9060318\r\n                         40.9190312,14.2925525 Z\"  transform=\"translate(21.009879, 14.505649) rotate(-4.012171)\r\n                         translate(-21.009879, -14.505649) \">\r\n                      </path>\r\n                  </g>\r\n              </svg>\r\n            </span>\r\n            Departures</button>\r\n            <button className={this.state.display === 'arrivals' ? ' air-btn--focus btn-right' : 'air-btn--focus-no'}\r\n              onClick={this.changedArrivals}>\r\n              <span>\r\n                <svg className=\"air-svg\" width=\"40px\" height=\"28px\" viewBox=\"0 0 40 28\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <g className=\"air-svg--fill\" fill=\"#fff\">\r\n                  <g id=\"Group\" transform=\"translate(-4.000000, -7.000000)\">\r\n                      <path d=\"M43.8940167,20.2848496 C43.7061583,19.5138567 43.2150547,18.8513283 42.531998,18.4474045\r\n                      C41.8489414,18.0434806 41.031764,17.9323603 40.2656518,18.1392252 L29.793485,21.013722 L16.1868667,8\r\n                      L12.3815328,9.02981973 L20.5461037,23.5412796 L10.7478188,26.2328084 L6.85949946,23.1183536 L4,23.9072155\r\n                      L7.5893717,30.3060954 L9.10710602,32.9956246 L12.2585544,32.1257769 L22.7297214,29.2522799 L31.3082198,26.9046908\r\n                      L41.7833862,24.0271945 C43.3808131,23.5527844 44.3144732,21.8973179 43.8940167,20.2848496 Z\"\r\n                      transform=\"translate(23.997341, 20.497812) rotate(27.974730)\r\n                      translate(-23.997341, -20.497812) \">\r\n                     </path>\r\n                    </g>\r\n                  </g>\r\n                </svg>\r\n              </span>\r\n              Arrivals</button>\r\n        </div>\r\n        <table className=\"air-table\">\r\n          <thead >\r\n            <tr>\r\n              <th>Terminal</th>\r\n              <th className={this.state.display === 'arrivals' ? 'visual-hidden' : 'visual-block'}>Gate</th>\r\n              <th>Local time</th>\r\n              <th>Destination</th>\r\n              <th>Status</th>\r\n              <th>Airline</th>\r\n              <th>Flight</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state[this.state.display].map(item =>\r\n              <Flight key={item.ID} items={item}\r\n                displayGate={this.state.display === 'departures'}/>)}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport FlightList from './Components/FlightList';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <FlightList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets;\r\n      // see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost.\r\n        // Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}